# C:\Users\Alessandro\Downloads\gpt-de-favela-api\.github\workflows\main_ci_cd.yaml

# Nome do seu fluxo de trabalho (aparecerá no GitHub Actions)
name: Deploy FastAPI to Google Cloud Run

# Eventos que disparam este fluxo de trabalho
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: 'read'
  id-token: 'write'

env:
  PROJECT_ID: 'gpt-favela'
  REGION: 'southamerica-east1'
  SERVICE_NAME: 'gpt-de-favela-api'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Google Cloud SDK
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Docker
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push Docker image
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/gpt-favela-repo/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/gpt-favela-repo/${{ env.SERVICE_NAME }}:${{ github.sha }}
        env:
          GOOGLE_CLOUD_PROJECT_ID: ${{ env.PROJECT_ID }}
        working-directory: ./

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/gpt-favela-repo/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars=GOOGLE_CLOUD_PROJECT_ID=${{ env.PROJECT_ID }},PORT=8080 \ # LINHA ALTERADA/ADICIONADA: Adiciona PORT=8080
            --set-cloudsql-instances="" \
            --timeout=600 \
            --startup-cpu-boost \ # NOVO: Ativa boost de CPU na inicialização
            --cpu-throttling=false \ # NOVO: Desativa throttling de CPU na inicialização (para mais recursos)
            --min-instances=0 \ # NOVO: Escala para 0 quando ocioso para economizar custos
            --max-instances=1 \ # NOVO: Limita a 1 instância para controlar custos durante o teste
            --startup-probe-timeout-seconds=300 # NOVO: Define timeout da sonda de inicialização para 300s (5min)